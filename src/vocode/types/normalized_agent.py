# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .normalized_agent_prompt import NormalizedAgentPrompt
from .language import Language
from .normalized_agent_vector_database import NormalizedAgentVectorDatabase
from .interrupt_sensitivity import InterruptSensitivity
from .normalized_agent_endpointing_sensitivity import NormalizedAgentEndpointingSensitivity
from .normalized_agent_ivr_navigation_mode import NormalizedAgentIvrNavigationMode
from .normalized_agent_openai_account_connection import NormalizedAgentOpenaiAccountConnection
from .internal_llm_fallback import InternalLlmFallback
from .normalized_agent_deepgram_keywords_value import NormalizedAgentDeepgramKeywordsValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class NormalizedAgent(UniversalBaseModel):
    id: str
    user_id: str
    name: typing.Optional[str] = None
    prompt: NormalizedAgentPrompt
    language: typing.Optional[Language] = None
    actions: typing.List[str]
    voice: str
    initial_message: typing.Optional[str] = None
    webhook: typing.Optional[str] = None
    vector_database: typing.Optional[NormalizedAgentVectorDatabase] = None
    interrupt_sensitivity: typing.Optional[InterruptSensitivity] = None
    context_endpoint: typing.Optional[str] = None
    noise_suppression: typing.Optional[bool] = None
    endpointing_sensitivity: typing.Optional[NormalizedAgentEndpointingSensitivity] = None
    ivr_navigation_mode: typing.Optional[NormalizedAgentIvrNavigationMode] = None
    conversation_speed: typing.Optional[float] = None
    initial_message_delay: typing.Optional[float] = None
    openai_model_name_override: typing.Optional[str] = None
    ask_if_human_present_on_idle: typing.Optional[bool] = None
    openai_account_connection: typing.Optional[NormalizedAgentOpenaiAccountConnection] = None
    run_do_not_call_detection: typing.Optional[bool] = None
    llm_fallback: typing.Optional[InternalLlmFallback] = None
    deepgram_keywords: typing.Optional[typing.Dict[str, typing.Optional[NormalizedAgentDeepgramKeywordsValue]]] = None
    idle_time_seconds: typing.Optional[int] = None
    llm_temperature: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
